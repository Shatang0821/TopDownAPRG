@startuml EnhancedVerticalGameArchitecture
top to bottom direction

package "Game Initialization" {
    class GameLaunch {
        +void InitializeFramework()
        +void CreateManagers()
    }

    GameLaunch --> "1" AudioManager
    GameLaunch --> "1" EffectManager
    GameLaunch --> "1" PoolManager
    GameLaunch --> "1" TimeManager
    GameLaunch --> "1" GameManager
}

package "Managers" {
    class AudioManager {
        +void PlaySound(string clipName)
    }

    class EffectManager {
        +void TriggerEffect(string effectName)
    }

    class PoolManager {
        +GameObject GetObject(string type)
        +void ReturnObject(GameObject obj)
    }

    class TimeManager {
        +void StartTimer()
        +void StopTimer()
    }

    class GameManager {
        {static} +GameManager Instance
        +GameStateEnum currentState
        +void ChangeState(GameStateEnum newState)
    }
}


GameManager --> "1" PlayerManager
GameManager --> "1" EnemyManager
GameManager --> "1" StageManager

package "Stage Management" {
    class StageManager {
        +void InitializeStage()
        +Stage LoadStage(int stageId)
    }

    class Stage {
        +Prefab mapPrefab
        +List<EnemyWave> enemyWaves
    }

    class PlayerManager {
        +void InitializePlayer()
        +void SpawnPlayerAt(Vector3 position)
    }

    class EnemyManager {
        +void InitializeEnemies()
        +void SpawnEnemies(Stage stage)
    }
}

package "Game States and Buff System" {
    ' ステートマシンとステート
    class StateMachine {
        #void RegisterState(TStateEnum stateEnum, IState state)
        +void ChangeState(TStateEnum newState)
        +void LogicUpdate()
        +void PhysicsUpdate()
        +bool CheckState(IState state)
    }

    interface IState {
        +void Enter()
        +void Execute()
        +void Exit()
    }

    class PlayerState {
    }

    class EnemyState {
    }

    enum PlayerStateEnum {
        Idle
        Move
        Attack
        Damaged
        Die
    }

    enum EnemyStateEnum {
        Idle
        Move
        Attack
        Damaged
        Die
    }

    ' バフシステム
    class BuffSystem {
        +void ApplyBuff(IBuff buff)
        +void RemoveBuff(IBuff buff)
    }
}

@enduml
